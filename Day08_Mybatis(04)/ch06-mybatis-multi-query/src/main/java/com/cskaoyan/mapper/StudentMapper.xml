<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.mapper.StudentMapper">


    <resultMap id="studentMap" type="com.cskaoyan.dto.multi2multi.Student">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>

        <collection property="courseList" ofType="com.cskaoyan.dto.multi2multi.Course">
            <result column="cid" property="id"/>
            <result column="cname" property="name"/>
        </collection>

    </resultMap>
    <select id="selectStudentWithCoursesByName" resultMap="studentMap">
        SELECT
                s.id AS id,
                s.NAME AS name,
                s.age AS age,
                c.id AS cid,
                c.`name` AS cname
        FROM
                student AS s
                        LEFT JOIN s_c AS sc ON s.id = sc.sid
                        LEFT JOIN course AS c ON c.id = sc.cid
        WHERE
                s.NAME = #{name}
    </select>


    <!-- 分次查询 -->

    <resultMap id="studentMap2" type="com.cskaoyan.dto.multi2multi.Student">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>

        <!--
            collection ：这个是指代我们要封装的这个成员变量是一个集合类型
            property: 这个是指我们这个集合类型的成员变量的名字
            column: 这个是指我们要传递给对应的sql语句的列名
            select: 这个是指我们要执行的第二次sql语句，这个sql语句的作用是帮助我们去查询出想要的对象或者集合对象
                    写法： namespace.id (假如是在同一个namespace里面，那么namespace可以省略)
            javaType: 这个是我们的这个成员变量的类型（集合类写 java.util.List 或者是别名 list ）
            ofType: 这个是成员变量这个集合里面元素的类型
        -->
        <collection property="courseList"
                    column="id" select="selectCourseByStudentId" javaType="java.util.List"
                    ofType="com.cskaoyan.dto.multi2multi.Course"/>

    </resultMap>
    <select id="selectStudentWithCoursesByName2" resultMap="studentMap2">
        select id,name,age from student where name = #{name}
    </select>


    <select id="selectCourseByStudentId" resultType="com.cskaoyan.dto.multi2multi.Course">

        SELECT
                c.id AS id,
                c.NAME AS name
        FROM
                s_c as sc
                        LEFT JOIN course  as c ON sc.cid = c.id
        WHERE
                sc.sid = #{id}
    </select>
</mapper>
